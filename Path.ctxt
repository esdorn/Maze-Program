#BlueJ class context
comment0.params=row\ column\ direction
comment0.target=Path(int,\ int,\ int)
comment0.text=\r\n\ \ \ \ \ \ Constructs\ a\ path\ with\ a\ given\ position\ and\ direction\r\n\ \ \ \ \ \ @param\ row\ the\ starting\ row\r\n\ \ \ \ \ \ @param\ column\ the\ starting\ column\r\n\ \ \ \ \ \ @param\ direction\ the\ starting\ direction\r\n
comment1.params=
comment1.target=void\ move()
comment1.text=\r\n\ \ \ \ \ \ Moves\ the\ ending\ position\ of\ this\ path\ one\ unit\ in\ the\r\n\ \ \ \ \ \ current\ direction.\r\n
comment2.params=
comment2.target=void\ turn()
comment2.text=\r\n\ \ \ \ \ \ Turns\ the\ ending\ direction\ of\ this\ path\ clockwise.\r\n
comment3.params=
comment3.target=int\ getEndingRow()
comment3.text=\r\n\ \ \ \ \ \ Gets\ the\ ending\ row\ of\ this\ path.\r\n\ \ \ \ \ \ @return\ the\ ending\ row\r\n
comment4.params=
comment4.target=int\ getEndingColumn()
comment4.text=\r\n\ \ \ \ \ \ Gets\ the\ ending\ column\ of\ this\ path.\r\n\ \ \ \ \ \ @return\ the\ ending\ column\r\n
comment5.params=
comment5.target=int\ getNextRow()
comment5.text=\r\n\ \ \ \ \ \ Gets\ the\ next\ row\ of\ this\ path\ if\ it\ continues\ in\ the\ ending\r\n\ \ \ \ \ \ direction.\r\n\ \ \ \ \ \ @return\ the\ next\ row\r\n
comment6.params=
comment6.target=int\ getNextColumn()
comment6.text=\r\n\ \ \ \ \ \ Gets\ the\ next\ column\ of\ this\ path\ if\ it\ continues\ in\ the\ ending\r\n\ \ \ \ \ \ direction.\r\n\ \ \ \ \ \ @return\ the\ next\ row\r\n
comment7.params=dir1\ dir2
comment7.target=boolean\ isOpposite(int,\ int)
comment7.text=\r\n\ \ \ \ \ \ Checks\ whether\ two\ directions\ are\ opposites\ of\ each\ other.\r\n\ \ \ \ \ \ @param\ dir1\ a\ direction\ between\ 0\ and\ 3\r\n\ \ \ \ \ \ @param\ dir2\ a\ direction\ between\ 0\ and\ 3\r\n\ \ \ \ \ \ @return\ true\ if\ they\ are\ opposites\ (i.e.\ 0\ and\ 2,\ 1\ and\ 3,\r\n\ \ \ \ \ \ 2\ and\ 0,\ or\ 3\ and\ 1)\r\n
comment8.params=other
comment8.target=boolean\ isOpposite(Path)
comment8.text=\r\n\ \ \ \ \ \ Checks\ whether\ this\ path\ is\ the\ opposite\ of\ another\ one.\r\n\ \ \ \ \ \ @param\ other\ another\ path\ that\ ends\ where\ this\ path\ starts\r\n\ \ \ \ \ \ @return\ true\ if\ other\ is\ the\ opposite\ of\ this\ path\r\n
comment9.params=
comment9.target=java.lang.String\ toString()
numComments=10
